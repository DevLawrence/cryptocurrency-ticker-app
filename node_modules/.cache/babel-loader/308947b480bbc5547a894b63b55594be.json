{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\lkyalo\\\\cryptocurrency-ticker-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\lkyalo\\\\cryptocurrency-ticker-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\lkyalo\\\\cryptocurrency-ticker-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\lkyalo\\\\cryptocurrency-ticker-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\lkyalo\\\\cryptocurrency-ticker-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\lkyalo\\\\cryptocurrency-ticker-app\\\\src\\\\components\\\\Tickers.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport './Tickers.css';\nimport Cryptocurrency from './Cryptocurrency';\n\nvar Tickers =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Tickers, _Component);\n\n  function Tickers(props) {\n    var _this;\n\n    _classCallCheck(this, Tickers);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Tickers).call(this, props));\n    _this.state = {\n      data: [{\n        id: \"bitcoin\",\n        name: \"Bitcoin\",\n        symbol: \"BTC\",\n        price_usd: \"1\",\n        percent_change_1h: \"0\",\n        percent_change_24h: \"0\",\n        percent_change_7d: \"0\"\n      }, {\n        id: \"ethereum\",\n        name: \"Ethereum\",\n        symbol: \"ETH\",\n        price_usd: \"1\",\n        percent_change_1h: \"0\",\n        percent_change_24h: \"0\",\n        percent_change_7d: \"0\"\n      }, {\n        id: \"litecoin\",\n        name: \"Litecoin\",\n        symbol: \"LTC\",\n        price_usd: \"1\",\n        percent_change_1h: \"0\",\n        percent_change_24h: \"0\",\n        percent_change_7d: \"0\"\n      }]\n    };\n    return _this;\n  }\n\n  _createClass(Tickers, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.fetchCryptocurrencyData();\n      this.interval = setInterval(function () {\n        return _this2.fetchCryptocurrencyData();\n      }, 60 * 1000);\n    }\n  }, {\n    key: \"fetchCryptocurrencyData\",\n    value: function fetchCryptocurrencyData() {\n      var _this3 = this;\n\n      axios.get(\"https://api.coinmarketcap.com/v1/ticker/?limit=10\").then(function (response) {\n        var wanted = [\"bitcoin\", \"ethereum\", \"litecoin\"];\n        var result = response.data.filter(function (currency) {\n          return wanted.includes(currency.id);\n        });\n\n        _this3.setState({\n          data: result\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var tickers = this.state.data.map(function (currency) {\n        return React.createElement(Cryptocurrency, {\n          data: currency,\n          key: currency.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        });\n      });\n      return React.createElement(\"div\", {\n        className: \"tickers-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        className: \"tickers\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \" \", tickers, \" \"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \" Information updated every minute courtesy of \", React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \" coinmarketcap.com \"), \" \"));\n    }\n  }]);\n\n  return Tickers;\n}(Component);\n\nexport default Tickers;","map":{"version":3,"sources":["C:\\Users\\lkyalo\\cryptocurrency-ticker-app\\src\\components\\Tickers.js"],"names":["React","Component","axios","Cryptocurrency","Tickers","props","state","data","id","name","symbol","price_usd","percent_change_1h","percent_change_24h","percent_change_7d","fetchCryptocurrencyData","interval","setInterval","get","then","response","wanted","result","filter","currency","includes","setState","catch","err","console","log","tickers","map"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,eAAP;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;IAGMC,O;;;;;AAEL,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AAClB,iFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACZC,MAAAA,IAAI,EAAE,CACL;AACCC,QAAAA,EAAE,EAAE,SADL;AAECC,QAAAA,IAAI,EAAE,SAFP;AAGCC,QAAAA,MAAM,EAAE,KAHT;AAICC,QAAAA,SAAS,EAAE,GAJZ;AAKCC,QAAAA,iBAAiB,EAAE,GALpB;AAMCC,QAAAA,kBAAkB,EAAE,GANrB;AAOCC,QAAAA,iBAAiB,EAAE;AAPpB,OADK,EAUL;AACCN,QAAAA,EAAE,EAAE,UADL;AAECC,QAAAA,IAAI,EAAE,UAFP;AAGCC,QAAAA,MAAM,EAAE,KAHT;AAICC,QAAAA,SAAS,EAAE,GAJZ;AAKCC,QAAAA,iBAAiB,EAAE,GALpB;AAMCC,QAAAA,kBAAkB,EAAE,GANrB;AAOCC,QAAAA,iBAAiB,EAAE;AAPpB,OAVK,EAmBL;AACCN,QAAAA,EAAE,EAAE,UADL;AAECC,QAAAA,IAAI,EAAE,UAFP;AAGCC,QAAAA,MAAM,EAAE,KAHT;AAICC,QAAAA,SAAS,EAAE,GAJZ;AAKCC,QAAAA,iBAAiB,EAAE,GALpB;AAMCC,QAAAA,kBAAkB,EAAE,GANrB;AAOCC,QAAAA,iBAAiB,EAAE;AAPpB,OAnBK;AADM,KAAb;AAFkB;AAkClB;;;;wCAEmB;AAAA;;AACnB,WAAKC,uBAAL;AACA,WAAKC,QAAL,GAAgBC,WAAW,CAAC;AAAA,eAAM,MAAI,CAACF,uBAAL,EAAN;AAAA,OAAD,EAAuC,KAAK,IAA5C,CAA3B;AACA;;;8CAEyB;AAAA;;AACzBb,MAAAA,KAAK,CAACgB,GAAN,CAAU,mDAAV,EACCC,IADD,CACM,UAAAC,QAAQ,EAAI;AACjB,YAAIC,MAAM,GAAG,CAAC,SAAD,EAAY,UAAZ,EAAwB,UAAxB,CAAb;AACA,YAAIC,MAAM,GAAGF,QAAQ,CAACb,IAAT,CAAcgB,MAAd,CAAqB,UAAAC,QAAQ;AAAA,iBAAIH,MAAM,CAACI,QAAP,CAAgBD,QAAQ,CAAChB,EAAzB,CAAJ;AAAA,SAA7B,CAAb;;AACA,QAAA,MAAI,CAACkB,QAAL,CAAc;AAAEnB,UAAAA,IAAI,EAAEe;AAAR,SAAd;AACA,OALD,EAMCK,KAND,CAMO,UAAAC,GAAG;AAAA,eAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,OANV;AAOA;;;6BAEO;AACR,UAAIG,OAAO,GAAG,KAAKzB,KAAL,CAAWC,IAAX,CAAgByB,GAAhB,CAAoB,UAACR,QAAD;AAAA,eAChC,oBAAE,cAAF;AAAiB,UAAA,IAAI,EAAEA,QAAvB;AAAiC,UAAA,GAAG,EAAEA,QAAQ,CAAChB,EAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADgC;AAAA,OAApB,CAAd;AAIC,aACC;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAI,QAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA0BuB,OAA1B,MADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2DAAiD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAjD,MAFD,CADD;AAMD;;;;EAhEqB9B,S;;AAqEtB,eAAeG,OAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport './Tickers.css';\r\nimport Cryptocurrency from './Cryptocurrency';\r\n\r\n\r\nclass Tickers extends Component{\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tdata: [\r\n\t\t\t\t{\r\n\t\t\t\t\tid: \"bitcoin\",\r\n\t\t\t\t\tname: \"Bitcoin\",\r\n\t\t\t\t\tsymbol: \"BTC\",\r\n\t\t\t\t\tprice_usd: \"1\",\r\n\t\t\t\t\tpercent_change_1h: \"0\",\r\n\t\t\t\t\tpercent_change_24h: \"0\",\r\n\t\t\t\t\tpercent_change_7d: \"0\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tid: \"ethereum\",\r\n\t\t\t\t\tname: \"Ethereum\",\r\n\t\t\t\t\tsymbol: \"ETH\",\r\n\t\t\t\t\tprice_usd: \"1\",\r\n\t\t\t\t\tpercent_change_1h: \"0\",\r\n\t\t\t\t\tpercent_change_24h: \"0\",\r\n\t\t\t\t\tpercent_change_7d: \"0\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tid: \"litecoin\",\r\n\t\t\t\t\tname: \"Litecoin\",\r\n\t\t\t\t\tsymbol: \"LTC\",\r\n\t\t\t\t\tprice_usd: \"1\",\r\n\t\t\t\t\tpercent_change_1h: \"0\",\r\n\t\t\t\t\tpercent_change_24h: \"0\",\r\n\t\t\t\t\tpercent_change_7d: \"0\",\r\n\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.fetchCryptocurrencyData();\r\n\t\tthis.interval = setInterval(() => this.fetchCryptocurrencyData(), 60 * 1000);\r\n\t}\r\n\r\n\tfetchCryptocurrencyData() {\r\n\t\taxios.get(\"https://api.coinmarketcap.com/v1/ticker/?limit=10\")\r\n\t\t.then(response => {\r\n\t\t\tvar wanted = [\"bitcoin\", \"ethereum\", \"litecoin\"];\r\n\t\t\tvar result = response.data.filter(currency => wanted.includes(currency.id));\r\n\t\t\tthis.setState({ data: result });\r\n\t\t})\r\n\t\t.catch(err => console.log(err));\r\n\t}\r\n\r\n\trender(){\r\n\tvar tickers = this.state.data.map((currency) =>\r\n\t\t\t< Cryptocurrency data={currency} key={currency.id} />\r\n\t\t);\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"tickers-container\">\r\n\t\t\t\t<ul className=\"tickers\"> {tickers} </ul>\r\n\t\t\t\t<p> Information updated every minute courtesy of <b> coinmarketcap.com </b> </p>\r\n\t\t\t</div>\r\n\t\t);\r\n}\r\n\r\n\r\n}\r\n\r\nexport default Tickers;"]},"metadata":{},"sourceType":"module"}